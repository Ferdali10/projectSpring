# ----- MySQL Secret -----
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  username: root
  password: Med200010*

---

# ----- MySQL Service (headless pour StatefulSet) -----
apiVersion: v1
kind: Service
metadata:
  name: springfoyer-mysql
spec:
  clusterIP: None
  selector:
    app: springfoyer-mysql
  ports:
    - port: 3306
      targetPort: 3306

---

# ----- MySQL StatefulSet -----
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: springfoyer-mysql
spec:
  serviceName: "springfoyer-mysql"
  replicas: 1
  selector:
    matchLabels:
      app: springfoyer-mysql
  template:
    metadata:
      labels:
        app: springfoyer-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
            - name: MYSQL_DATABASE
              value: springfoyer
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

---

# ----- Spring Boot Deployment -----
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springfoyer-deployment
  labels:
    app: springfoyer
spec:
  replicas: 3  # Haute disponibilité
  selector:
    matchLabels:
      app: springfoyer
  template:
    metadata:
      labels:
        app: springfoyer
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox
          command:
            - sh
            - -c
            - |
              echo "Waiting for MySQL..."
              until nc -z springfoyer-mysql 3306; do
                echo "MySQL not ready yet..."
                sleep 5
              done
              echo "MySQL is up!"
      containers:
        - name: springfoyer
          image: dalifer/springfoyer:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://springfoyer-mysql:3306/springfoyer"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password

---

# ----- Spring Boot Service -----
apiVersion: v1
kind: Service
metadata:
  name: springfoyer-service
spec:
  selector:
    app: springfoyer
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer  # exposé via cloud provider

---

# ----- Horizontal Pod Autoscaler -----
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: springfoyer-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: springfoyer-deployment
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60



