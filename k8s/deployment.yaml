# ------------------------------------------
# Secret MySQL
# ------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
stringData:
  username: root
  password: Med200010*
---
# ------------------------------------------
# Service MySQL
# ------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: springfoyer-mysql
  ports:
    - port: 3306
      targetPort: 3306
  type: ClusterIP
---
# ------------------------------------------
# Deployment MySQL
# ------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springfoyer-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springfoyer-mysql
  template:
    metadata:
      labels:
        app: springfoyer-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
            - name: MYSQL_DATABASE
              value: springfoyer
          ports:
            - containerPort: 3306
          readinessProbe:
            exec:
              command: ["mysqladmin","ping","-h","localhost"]
            initialDelaySeconds: 10
            periodSeconds: 5
---
# ------------------------------------------
# Deployment Spring Boot
# ------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springfoyer-deployment
  labels:
    app: springfoyer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springfoyer
  template:
    metadata:
      labels:
        app: springfoyer
    spec:
      # Init container pour attendre MySQL
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.34
          command: ['sh', '-c', 'until nc -z mysql-service 3306; do echo waiting for mysql; sleep 5; done']
      containers:
        - name: springfoyer
          image: dalifer/springfoyer:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://mysql-service:3306/springfoyer"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: password
---
# ------------------------------------------
# Service Spring Boot
# ------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: springfoyer-service
spec:
  selector:
    app: springfoyer
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
  type: NodePort

